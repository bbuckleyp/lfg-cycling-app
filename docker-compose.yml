version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lfg-db
    environment:
      POSTGRES_DB: lfg_cycling
      POSTGRES_USER: lfg_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lfg_user -d lfg_cycling"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: lfg-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-your_redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lfg-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://lfg_user:${DB_PASSWORD:-your_secure_password}@postgres:5432/lfg_cycling
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}
      STRAVA_CLIENT_ID: ${STRAVA_CLIENT_ID}
      STRAVA_CLIENT_SECRET: ${STRAVA_CLIENT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      REDIS_URL: redis://:${REDIS_PASSWORD:-your_redis_password}@redis:6379
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lfg-frontend
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:5000/api}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Notification processor (cron job)
  notification-processor:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lfg-notifications
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://lfg_user:${DB_PASSWORD:-your_secure_password}@postgres:5432/lfg_cycling
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}
    command: >
      sh -c "
        while true; do
          echo 'Running notification processor...'
          node dist/scripts/processNotifications.js
          echo 'Notification processor completed. Sleeping for 1 hour...'
          sleep 3600
        done
      "
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: lfg-network